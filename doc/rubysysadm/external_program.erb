<%section '利用 Ruby 來黏著不同的外部程式' do%>
<%paragraph do%>
身為一個系統管理者，為什麼會迷上 Ruby 呢？
有管理過 unix 的管理者，會發現他每天必須寫許多 script
來結合不同的程式，完成無數的工作。
能有效把不同外部程式黏起來的語言，
才能成為系統管理者的瑞士刀。
<%end%>
<%paragraph do%>
作為一個好的黏著語言，
本身必須不利用外部程式語言便可以執行大部份的外部程式，
像利用 C 來為 Ruby 寫 Binding 讓它引用 C 的函式庫，
便不在本文討論之列。
<%end%>
<%paragraph do%>
<%end%>
<%table 'Ruby 黏著外部程式的方法' do%>
<table>
<tr><th>外部程式種類</th><th>呼叫方法</th><th>呼叫語法</th></tr>
<tr>
<td>可執行檔</td>
<td>system, exec 或 `字元</td>
<td>將命令列字串傳入</td>
</tr>
<tr>
<td>DLL</td>
<td>DL 模組</td>
<td>可以 Ruby 函數的語法呼叫，但需手動指定函數名稱及函數引數及回傳值的資料型態
</td>
</tr>
<tr>
<td>Windows API</td>
<td>Win32API 物件</td>
<td>可以 Ruby 函數的語法呼叫，但需手動指定函數名稱及函數引數及回傳值的資料型態</td>
</tr>
<tr>
<td>OLE</td>
<td>WIN32OLE 物件</td>
<td>OLE 檔案本身包含物件導向的資訊，可以直接利用 Ruby
的物件語法來使用函式庫</td>
</tr>
</table>
<%end%>
<%# include shell.erb #%>
<%# include ole.erb #%>
<%# include winapi.erb #%>
<%# include dl.erb #%>
<%end%>
